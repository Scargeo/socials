{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SCARGEO\\\\Documents\\\\full_dev\\\\client\\\\src\\\\pages\\\\CreatePost.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\"; // Formik is a library that helps with forms in React\nimport * as Yup from \"yup\"; // Yup is a library that helps with form validation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePost() {\n  /* initialValues is an object that contains the initial values of the form fields */\n  const initialValues = {\n    title: \"\",\n    postTest: \"\",\n    username: \"\"\n  };\n  /* rules for validation*/\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"You must input a title\"),\n    postText: Yup.string().required(\"You must input a post\"),\n    username: Yup.string().required(\"You must input a username\")\n  });\n\n  /* onSubmit is a function that is called when the form is submitted */\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    classname: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onsubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \"Title \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"(Eg. Title...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \"Post: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"(Eg. Post...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autocomplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"(Eg. John123...)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","jsxDEV","_jsxDEV","CreatePost","initialValues","title","postTest","username","validationSchema","object","string","required","postText","onSubmit","data","console","log","classname","children","onsubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","autocomplete","id","name","placeholder","type","_c","$RefreshReg$"],"sources":["C:/Users/SCARGEO/Documents/full_dev/client/src/pages/CreatePost.js"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\"; // Formik is a library that helps with forms in React\r\nimport * as Yup from \"yup\"; // Yup is a library that helps with form validation\r\n\r\nfunction CreatePost() {\r\n\r\n    /* initialValues is an object that contains the initial values of the form fields */\r\n    const initialValues = {\r\n        title: \"\",\r\n        postTest: \"\",\r\n        username: \"\"\r\n    }\r\n    /* rules for validation*/\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required(\"You must input a title\"),\r\n        postText: Yup.string().required(\"You must input a post\"),\r\n        username: Yup.string().required(\"You must input a username\")\r\n    }); \r\n\r\n    /* onSubmit is a function that is called when the form is submitted */\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n    };\r\n  return (\r\n    <div classname=\"createPostPage\">\r\n      <Formik initialValues={initialValues} onsubmit={onSubmit}>\r\n        <Form className=\"formContainer\">\r\n            <lable>Title </lable> \r\n            <Field \r\n                autocomplete=\"off\"\r\n                id=\"inputCreatePost\"\r\n                name=\"title\"\r\n                placeholder=\"(Eg. Title...)\"\r\n            />\r\n            <lable>Post: </lable> \r\n            <Field \r\n                autocomplete=\"off\"\r\n                id=\"inputCreatePost\"\r\n                name=\"title\"\r\n                placeholder=\"(Eg. Post...)\"\r\n            />\r\n            <lable>Username: </lable> \r\n            <Field \r\n                autocomplete=\"off\"\r\n                id=\"inputCreatePost\"\r\n                name=\"title\"\r\n                placeholder=\"(Eg. John123...)\"\r\n            />\r\n            <button type=\"submit\">Create Post</button>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}