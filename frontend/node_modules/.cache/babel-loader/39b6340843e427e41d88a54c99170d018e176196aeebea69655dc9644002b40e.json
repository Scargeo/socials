{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SCARGEO\\\\Documents\\\\full_dev\\\\client\\\\src\\\\pages\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Post() {\n  _s();\n  const {\n    id\n  } = useParams(); // useParams is a hook that allows you to access the URL parameters in the component.\n  const [postObject, setPostObject] = React.useState({}); // useState hook to store the post object\n  const [comments, setComments] = React.useState([]); // useState hook to store the comments\n  const [newComment, setNewComment] = React.useState(\"\"); // useState hook to store the new comment\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/byId/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, [id]);\n\n  // function to add a new comment\n  const addComment = () => {\n    axios.post(\"http://localhost:3001/comments\", {\n      commentBody: newComment,\n      postId: id\n    }).then(response => {\n      console.log(\"Comment added\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        id: \"individual\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [\" \", postObject.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postText\",\n          children: [\" \", postObject.postText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\",\n          children: [\" \", postObject.username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment...\",\n          autoComplete: \"off\",\n          onChange: event => {\n            setNewComment(event).target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" Add Comment \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: [\" \", comment.commentBody, \" \"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Post, \"7L4aHWDeWEG0/obUbx5Ket+BFag=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useParams","axios","jsxDEV","_jsxDEV","Post","_s","id","postObject","setPostObject","useState","comments","setComments","newComment","setNewComment","get","then","response","data","addComment","post","commentBody","postId","console","log","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postText","username","type","placeholder","autoComplete","onChange","event","target","value","onClick","map","comment","key","_c","$RefreshReg$"],"sources":["C:/Users/SCARGEO/Documents/full_dev/client/src/pages/Post.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Post() {\r\n    const { id } = useParams(); // useParams is a hook that allows you to access the URL parameters in the component.\r\n    const [postObject, setPostObject] = React.useState({}); // useState hook to store the post object\r\n    const [comments, setComments] = React.useState([]); // useState hook to store the comments\r\n    const [newComment, setNewComment] = React.useState(\"\"); // useState hook to store the new comment\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n          setPostObject(response.data);\r\n        });\r\n\r\n        axios.get(`http://localhost:3001/comments/byId/${id}`).then((response) => {\r\n          setComments(response.data);\r\n        });\r\n    }, [id]);\r\n\r\n    // function to add a new comment\r\n    const addComment = () => {\r\n      axios.post(\"http://localhost:3001/comments\", {\r\n        commentBody: newComment, \r\n        postId: id})\r\n        .then((response) => {\r\n          console.log(\"Comment added\");\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"postPage\">\r\n      <div className=\"leftSide\">\r\n        <div className=\"post\" id=\"individual\">\r\n        <div className=\"title\"> {postObject.title} </div>\r\n        <div className=\"postText\"> {postObject.postText} </div>\r\n        <div className=\"footer\"> {postObject.username} </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide\">\r\n        <div className=\"addCommentContainer\">\r\n          <input type=\"text\" placeholder=\"Comment...\"  autoComplete=\"off\"\r\n           onChange={(event) => {setNewComment(event).target.value}} />\r\n          <button onClick={addComment}> Add Comment </button>\r\n        </div>\r\n        <div className=\"listOfComments\">\r\n          {comments.map((comment, key) => {\r\n            return (\r\n              <div key={key} className=\"comment\"> {comment.commentBody} </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>);\r\n}\r\n\r\nexport default Post\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}